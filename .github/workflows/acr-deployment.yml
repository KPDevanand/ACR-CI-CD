name: Build and Push Docker Image to Azure Container Registry

on:
  pull_request:
    types: [closed]
    branches:
      - master
  workflow_dispatch:

jobs:
  fetch-new-tag:
    if: ${{ (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev') || (github.event.pull_request.merged == true && github.ref == 'refs/heads/master')}}
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.get-new-tag.outputs.NEW_TAG }}
    steps:
      - name : Checkout Repository
        uses : actions/checkout@v4

      - name : Calculate New Tag
        id : get-new-tag
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            PREFIX="Prod_"
            tag_version=${{vars.PRD_TAG_VERSION}}
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            PREFIX="Dev_"
            tag_version=${{vars.NPRD_TAG_VERSION}}
          fi

          # Check if the tag is already present
          git fetch --unshallow --tags
          echo "Searching for tags like ${PREFIX}${tag_version}"
          CHECK_TAG=$(git tag -l "${PREFIX}${tag_version}")

          if [ -z "$CHECK_TAG" ]; then
            NEW_TAG=$tag_version
          else
            echo "Searching for tags starting with ${PREFIX}*"
            LATEST_TAG=$(git tag -l "${PREFIX}"* | sort -V | tail -n 1)
            NUMERIC_PART=$(echo "$LATEST_TAG" | sed "s/${PREFIX}//")
            IFS='.' read -r INTEGER FRACTION <<< "$NUMERIC_PART"
            NEW_FRAC=$(printf "%02d" $((10#$FRACTION + 1)))
            NEW_TAG="${INTEGER}.${NEW_FRAC}"
          fi

          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "Next tag will be: $NEW_TAG"
  
  build-and-push-image-to-acr:
    runs-on: ubuntu-latest
    needs: fetch-new-tag
    steps:
      - name : Checkout Repository
        uses : actions/checkout@v4

      - name : Get ACR Credentials
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "ACR_USERNAME=testp${{secrets.PRD_ACR_USERNAME}}" >> $GITHUB_ENV
            echo "ACR_PASSWORD=${{secrets.PRD_ACR_PASSWORD}}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "ACR_USERNAME=testn${{secrets.NPRD_ACR_USERNAME}}" >> $GITHUB_ENV
            echo "ACR_PASSWORD=${{secrets.NPRD_ACR_PASSWORD}}" >> $GITHUB_ENV
          fi

      - name : Login to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{env.ACR_USERNAME}}.azurecr.io
          username: ${{env.ACR_USERNAME}}
          password: ${{env.ACR_PASSWORD}}

      - name : Build Docker Image
        run: |
          docker build . -t ${{env.ACR_USERNAME}}.azurecr.io/${{env.ACR_USERNAME}}:latest

      - name : Push Image with Latest tag
        run: |
          docker push ${{env.ACR_USERNAME}}.azurecr.io/${{env.ACR_USERNAME}}:latest

      - name : Push Image with Historical tag
        run: |
          VERSION_NUMBER=${{needs.fetch-new-tag.outputs.new-tag}}
          docker tag ${{env.ACR_USERNAME}}.azurecr.io/${{env.ACR_USERNAME}}:latest ${{env.ACR_USERNAME}}.azurecr.io/${{env.ACR_USERNAME}}:v${VERSION_NUMBER}
          docker push ${{env.ACR_USERNAME}}.azurecr.io/${{env.ACR_USERNAME}}:v${VERSION_NUMBER}

  create-new-tag:
    runs-on: ubuntu-latest
    needs: [fetch-new-tag, build-and-push-image-to-acr]
    steps:
      - name : Checkout Repository
        uses : actions/checkout@v4

      - name : Set up Git User
        run: |
          git config user.name ${{github.actor}}
          git config user.email "${{github.actor_id}}+${{github.actor}}@users.noreply.github.com"

      - name: Create tag
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            PREFIX="Prod_"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            PREFIX="Dev_"
          fi

          VERSION_NUMBER=${{needs.fetch-new-tag.outputs.new-tag}}
          TAG_NAME="${PREFIX}${VERSION_NUMBER}"

          git tag -a "${TAG_NAME}" -m "Version ${VERSION_NUMBER}"
          git push origin "${TAG_NAME}"